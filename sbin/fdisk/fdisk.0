FDISK(8)                 UNIX System Manager's Manual                 FDISK(8)

NNAAMMEE
     ffddiisskk - DOS partition maintainance program

SSYYNNOOPPSSIISS
     ffddiisskk [--ii] [--uu]

     --ii    Initializes sector 0 of the disk.

     --uu    Is used for updating (editing) sector 0 of the disk.

PPRROOLLOOGGUUEE
     In order for the BIOS to boot the kernel, certain conventions must be ad-
     hered to.  Sector 0 of the disk must contain boot code, a partition
     table, and a magic number.  BIOS partitions can be used to break the disk
     up into several pieces.  The BIOS brings in sector 0 (does it really use
     the code?)  and verifies the magic number.  It then searches the 4 BIOS
     partitions described by sector 0 to determine which of them is _a_c_t_i_v_e.
     This boot then brings in the secondary boot block from the _a_c_t_i_v_e parti-
     tion and runs it.  Under DOS, you could have one or more partitions with
     one _a_c_t_i_v_e. The DOS ffddiisskk program can be used to divide space on the disk
     into partitions and set one _a_c_t_i_v_e.

DDEESSCCRRIIPPTTIIOONN
     The 386bsd program ffddiisskk serves a similar purpose to the DOS program.
     When called with no arguments, it prints the sector 0 partition table.
     An example follows:


             ******* Working on device /dev/rwd0d *******
             parameters extracted from in-core disklabel are:
             cylinders=769 heads=15 sectors/track=33 (495 blks/cyl)

             parameters to be used for BIOS calculations are:
             cylinders=769 heads=15 sectors/track=33 (495 blks/cyl)

             Warning: BIOS sector numbering starts with sector 1
             Information from DOS bootblock is:
             The data for partition 0 is:
             sysid 165,(386BSD)
                 start 495, size 380160 (185 Meg), flag 0
                     beg: cyl 1/ sector 1/ head 0;
                     end: cyl 768/ sector 33/ head 14
             The data for partition 1 is:
             sysid 164,(unknown)
                 start 378180, size 2475 (1 Meg), flag 0
                     beg: cyl 764/ sector 1/ head 0;
                     end: cyl 768/ sector 33/ head 14
             The data for partition 2 is:
             <UNUSED>
             The data for partition 3 is:
             sysid 99,(ISC UNIX, other System V/386, GNU HURD or Mach)
                 start 380656, size 224234 (109 Meg), flag 80
                     beg: cyl 769/ sector 2/ head 0;
                     end: cyl 197/ sector 33/ head 14

     The disk is divided into three parititions that happen to fill the disk.
     The second partition overlaps the end of the first.  (Used for debugging
     purposes)

     _s_y_s_i_d                 is used to label the partition.  386bsd reserves
                           the magic number 165 decimal (A5 in hex).

     _s_t_a_r_t _a_n_d _s_i_z_e        fields provide the start address and size of a

                           parition in sectors.

     _f_l_a_g _8_0               specifies that this is the active partition.

     _c_y_l, _s_e_c_t_o_r _a_n_d _h_e_a_d  fields are used to specify the beginning address
                           and end address for the parititon.

     _N_o_t_e:                 these numbers are calculated using BIOS's under-
                           standing of the disk geometry and saved in the
                           bootblock.

     The flags --ii or --uu are used to indicate that the paritition data is to be
     updated.  The ffddiisskk program will enter a conversational mode.  This mode
     is designed not to change any data unless you explicitly tell it to.
     ffddiisskk selects defaults for its questions to guarantee the above be-
     haviour.

     It displays each partition and ask if you want to edit it.  If you say
     yes, it will step through each field showing the old value and asking for
     a new one.  When you are done with a partition, ffddiisskk will display it and
     ask if it is correct.  ffddiisskk will then procede to the next entry.

     Getting the _c_y_l, _s_e_c_t_o_r, and _h_e_a_d fields correct is tricky.  So by de-
     fault, they will be calculated for you; you can specify them if you
     choose.

     After all the partitions are processed, you are given the option to
     change the _a_c_t_i_v_e partition.  Finally, when the all the data for the
     first sector has been accumulated, you are asked if you really want to
     rewrite sector 0.  Only if you answer yes, will the data be written to
     disk.

     The difference between the --uu flag and --ii flag is that the --uu flag just
     edits the fields as they appear on the disk.  While the --ii flag is used
     to "initialize" sector 0; it will setup the last BIOS partition to use
     the whole disk for 386bsd; and make it active.

NNOOTTEESS
     The automatic calculation of starting cylinder etc. uses a set of figures
     that represent what the BIOS thinks is the geometry of the drive.  These
     figures are by default taken from the incore disklabel, but the program
     initially gives you an oportunity to change them.  This allows the user
     to create a bootblock that can work with drives that use geometry trans-
     lation under the BIOS.

     If you hand craft your disk layout, please make sure that the 386bsd par-
     tition starts on a cylinder boundary.  A number of decisions made later
     may assume this.  (This might not be necessary later.)

     Editing an existing partition will most likely cause you to lose all the
     data in that partition.

     You should run this program interactively once or twice to see how it
     works.  This is completely safe as long as you answer the last question
     in the negative.  There are subtleties that the program detects that are
     not fully explained in this manual page.

SSEEEE AALLSSOO
     disklabel(8)

BBUUGGSS
     One less now, but probably more

                                 April 4, 1993                               3


